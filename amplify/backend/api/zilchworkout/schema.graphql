type Strava @model @auth(rules: [{allow: private, operations: [read], provider: iam}]) {
  id: ID!
  clientId: String
  secret: String
}

type Schedule @model @auth(rules: [{allow: private, provider: iam}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  scheduledTimestamp: Int
  notificationTimestamp: Int
  workoutName: String
  userID: ID
}

type Activity @model @auth(rules: [{allow: private, provider: iam}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  name: String
  startTime: Int
  averagePower: Int
  duration: Int
  tss: Int
  segmentsDuration: [Int]
  workoutName: String
  userID: ID
}

type Workout @model @auth(rules: [{allow: private, provider: iam}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  name: String
  type: [Int]
  power: [Int]
  slope: [Int]
  duration: [Int]
  lastModified: Int
  userID: ID
}

type User @model @auth(rules: [{allow: private, operations: [create, read, update], provider: iam}]) {
  id: ID!
  username: String!
  nickname: String!
  age: Int
  sex: Int
  metric: Boolean!
  weight: Int!
  bikeWeight: Int!
  wheelCircumference: Int
  ftp: Int!
  zone1: Int!
  zone2: Int!
  zone3: Int!
  zone4: Int!
  zone5: Int!
  rrHr: Int!
  ltHr: Int
  maxHr: Int
  newFtp: Int
  powerCurve: [Int]
  Workouts: [Workout] @connection(keyName: "byUser", fields: ["id"])
  Activities: [Activity] @connection(keyName: "byUser", fields: ["id"])
  Schedules: [Schedule] @connection(keyName: "byUser", fields: ["id"])
}
 